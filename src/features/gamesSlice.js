import { createSlice,createAsyncThunk } from "@reduxjs/toolkit";
import axios from "axios";
import {popularGamesURL,upcomingGamesURL,newGamesURL} from "../api";



export const fetchGames = createAsyncThunk(
    'games/fetchGames',
    async () => {
        const popularGames = await axios.get(popularGamesURL());
        const newGames = await axios.get(newGamesURL());
        const upcomingGames = await axios.get(upcomingGamesURL());

        const popularGamesData = popularGames.data.results;
        const newGamesData = newGames.data.results;
        const upcomingGamesData = upcomingGames.data.results;
        return ({
          popularGamesData,
          newGamesData,
          upcomingGamesData
        });
    }
)




const gamesSlice = createSlice({
    name: 'games',
    initialState:{
        data: {
            popularGames: [],
            newGames: [],
            upcomingGames: [],
        },
        loading: false,
        error: null,
    },
    reducers: {},
    extraReducers: (builder) => {
        builder
              .addCase(fetchGames.pending,(state) => {
                state.loading = true;
                state.error = null;
              })
              .addCase(fetchGames.fulfilled,(state,action) => {
                state.loading = false;
                state.error = null;
                state.data.popularGames = action.payload.popularGamesData;
                state.data.newGames = action.payload.newGamesData;
                state.data.upcomingGames = action.payload.upcomingGamesData;
              })
              .addCase(fetchGames.rejected,(state,action) => {
                state.loading = false;
                state.error = action.error.message;
              });
    }
});



//export individual actions automatically generated by the reducers 


//exporting reducer
export default gamesSlice.reducer;